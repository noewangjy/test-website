{"pageProps":{"title":"What's New in v3.3","teaser":"New features and how to upgrade","menu":[["New Features","features"],["Upgrading Notes","upgrading"]],"slug":"/usage/v3-3","mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    section: \"section\",\n    h2: \"h2\",\n    p: \"p\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    a: \"a\",\n    pre: \"pre\",\n    code: \"code\",\n    blockquote: \"blockquote\",\n    h4: \"h4\"\n  }, _provideComponents(), props.components), {InlineCode, Iframe} = _components;\n  if (!Iframe) _missingMdxReference(\"Iframe\", true);\n  if (!InlineCode) _missingMdxReference(\"InlineCode\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.section, {\n      id: \"section-features\",\n      children: [_jsx(_components.h2, {\n        id: \"features\",\n        hidden: \"true\",\n        children: \"New features \"\n      }), _jsx(_components.p, {\n        children: \"spaCy v3.3 improves the speed of core pipeline components, adds a new trainable\\nlemmatizer, and introduces trained pipelines for Finnish, Korean and Swedish.\"\n      }), _jsx(_components.h3, {\n        id: \"speed\",\n        children: \"Speed improvements \"\n      }), _jsx(_components.p, {\n        children: \"v3.3 includes a slew of speed improvements:\"\n      }), _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Speed up parser and NER by using constant-time head lookups.\"\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"Support unnormalized softmax probabilities in \", _jsx(InlineCode, {\n            children: \"spacy.Tagger.v2\"\n          }), \" to speed up\\ninference for tagger, morphologizer, senter and trainable lemmatizer.\"]\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Speed up parser projectivization functions.\"\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"Replace \", _jsx(InlineCode, {\n            children: \"Ragged\"\n          }), \" with faster \", _jsx(InlineCode, {\n            children: \"AlignmentArray\"\n          }), \" in \", _jsx(InlineCode, {\n            children: \"Example\"\n          }), \" for training.\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"Improve \", _jsx(InlineCode, {\n            children: \"Matcher\"\n          }), \" speed.\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"Improve serialization speed for empty \", _jsx(InlineCode, {\n            children: \"Doc.spans\"\n          }), \".\"]\n        }), \"\\n\"]\n      }), _jsxs(_components.p, {\n        children: [\"For longer texts, the trained pipeline speeds improve \", _jsx(_components.strong, {\n          children: \"15%\"\n        }), \" or more in\\nprediction. We benchmarked \", _jsx(InlineCode, {\n          children: \"en_core_web_md\"\n        }), \" (same components as in v3.2) and\\n\", _jsx(InlineCode, {\n          children: \"de_core_news_md\"\n        }), \" (with the new trainable lemmatizer) across a range of text\\nsizes on Linux (Intel Xeon W-2265) and OS X (M1) to compare spaCy v3.2 vs. v3.3:\"]\n      }), _jsx(_components.p, {\n        children: _jsx(_components.strong, {\n          children: \"Intel Xeon W-2265\"\n        })\n      }), _jsxs(_components.table, {\n        children: [_jsx(_components.thead, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.th, {\n              align: \"left\",\n              children: \"Model\"\n            }), _jsx(_components.th, {\n              align: \"right\",\n              children: \"Avg. Words/Doc\"\n            }), _jsx(_components.th, {\n              align: \"right\",\n              children: \"v3.2 Words/Sec\"\n            }), _jsx(_components.th, {\n              align: \"right\",\n              children: \"v3.3 Words/Sec\"\n            }), _jsx(_components.th, {\n              align: \"right\",\n              children: \"Diff\"\n            })]\n          })\n        }), _jsxs(_components.tbody, {\n          children: [_jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              align: \"left\",\n              children: _jsx(_components.a, {\n                href: \"/models/en#en_core_web_md\",\n                children: _jsx(InlineCode, {\n                  children: \"en_core_web_md\"\n                })\n              })\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"100\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"17292\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"17441\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"0.86%\"\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              align: \"left\",\n              children: \"(=same components)\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"1000\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"15408\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"16024\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"4.00%\"\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              align: \"left\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"10000\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"12798\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"15346\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"19.91%\"\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              align: \"left\",\n              children: _jsx(_components.a, {\n                href: \"/models/de/#de_core_news_md\",\n                children: _jsx(InlineCode, {\n                  children: \"de_core_news_md\"\n                })\n              })\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"100\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"20221\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"19321\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"-4.45%\"\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              align: \"left\",\n              children: \"(+v3.3 trainable lemmatizer)\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"1000\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"17480\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"17345\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"-0.77%\"\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              align: \"left\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"10000\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"14513\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"17036\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"17.38%\"\n            })]\n          })]\n        })]\n      }), _jsx(_components.p, {\n        children: _jsx(_components.strong, {\n          children: \"Apple M1\"\n        })\n      }), _jsxs(_components.table, {\n        children: [_jsx(_components.thead, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.th, {\n              children: \"Model\"\n            }), _jsx(_components.th, {\n              align: \"right\",\n              children: \"Avg. Words/Doc\"\n            }), _jsx(_components.th, {\n              align: \"right\",\n              children: \"v3.2 Words/Sec\"\n            }), _jsx(_components.th, {\n              align: \"right\",\n              children: \"v3.3 Words/Sec\"\n            }), _jsx(_components.th, {\n              align: \"right\",\n              children: \"Diff\"\n            })]\n          })\n        }), _jsxs(_components.tbody, {\n          children: [_jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.a, {\n                href: \"/models/en#en_core_web_md\",\n                children: _jsx(InlineCode, {\n                  children: \"en_core_web_md\"\n                })\n              })\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"100\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"18272\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"18408\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"0.74%\"\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: \"(=same components)\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"1000\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"18794\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"19248\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"2.42%\"\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {}), _jsx(_components.td, {\n              align: \"right\",\n              children: \"10000\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"15144\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"17513\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"15.64%\"\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.a, {\n                href: \"/models/de/#de_core_news_md\",\n                children: _jsx(InlineCode, {\n                  children: \"de_core_news_md\"\n                })\n              })\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"100\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"19227\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"19591\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"1.89%\"\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: \"(+v3.3 trainable lemmatizer)\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"1000\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"20047\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"20628\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"2.90%\"\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {}), _jsx(_components.td, {\n              align: \"right\",\n              children: \"10000\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"15921\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"18546\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"16.49%\"\n            })]\n          })]\n        })]\n      }), _jsx(_components.h3, {\n        id: \"trainable-lemmatizer\",\n        children: \"Trainable lemmatizer \"\n      }), _jsxs(_components.p, {\n        children: [\"The new \", _jsx(_components.a, {\n          href: \"/api/edittreelemmatizer\",\n          children: \"trainable lemmatizer\"\n        }), \" component uses\\n\", _jsx(_components.a, {\n          href: \"https://explosion.ai/blog/edit-tree-lemmatizer\",\n          children: \"edit trees\"\n        }), \" to transform tokens\\ninto lemmas. Try out the trainable lemmatizer with the\\n\", _jsx(_components.a, {\n          href: \"/usage/training#quickstart\",\n          children: \"training quickstart\"\n        }), \"!\"]\n      }), _jsx(_components.h3, {\n        id: \"displacy\",\n        children: \"displaCy support for overlapping spans and arcs \"\n      }), _jsxs(_components.p, {\n        children: [\"displaCy now supports overlapping spans with a new\\n\", _jsx(_components.a, {\n          href: \"/usage/visualizers#span\",\n          children: _jsx(InlineCode, {\n            children: \"span\"\n          })\n        }), \" style and multiple arcs with different labels\\nbetween the same tokens for \", _jsx(_components.a, {\n          href: \"/usage/visualizers#dep\",\n          children: _jsx(InlineCode, {\n            children: \"dep\"\n          })\n        }), \" visualizations.\"]\n      }), _jsxs(_components.p, {\n        children: [\"Overlapping spans can be visualized for any spans key in \", _jsx(InlineCode, {\n          children: \"doc.spans\"\n        }), \":\"]\n      }), _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-python\",\n          lang: \"python\",\n          children: \"import spacy\\nfrom spacy import displacy\\nfrom spacy.tokens import Span\\n\\nnlp = spacy.blank(\\\"en\\\")\\ntext = \\\"Welcome to the Bank of China.\\\"\\ndoc = nlp(text)\\ndoc.spans[\\\"custom\\\"] = [Span(doc, 3, 6, \\\"ORG\\\"), Span(doc, 5, 6, \\\"GPE\\\")]\\ndisplacy.serve(doc, style=\\\"span\\\", options={\\\"spans_key\\\": \\\"custom\\\"})\\n\"\n        })\n      }), _jsx(Iframe, {\n        title: \"displaCy visualizer for overlapping spans\",\n        src: \"/images/displacy-span.html\",\n        height: 180\n      })]\n    }), \"\\n\", _jsxs(_components.section, {\n      children: [_jsx(_components.h2, {\n        children: \"Additional features and improvements\"\n      }), _jsxs(_components.ul, {\n        children: [\"\\n\", _jsxs(_components.li, {\n          children: [\"Config comparisons with \", _jsx(_components.a, {\n            href: \"/api/cli#debug-diff\",\n            children: _jsx(InlineCode, {\n              children: \"spacy debug diff-config\"\n            })\n          }), \".\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"Span suggester debugging with\\n\", _jsx(_components.a, {\n            href: \"/api/spancategorizer#set_candidates\",\n            children: _jsx(InlineCode, {\n              children: \"SpanCategorizer.set_candidates\"\n            })\n          }), \".\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"Big endian support with\\n\", _jsx(_components.a, {\n            href: \"https://github.com/andrewsi-z/thinc-bigendian-ops\",\n            children: _jsx(InlineCode, {\n              children: \"thinc-bigendian-ops\"\n            })\n          }), \" and\\nupdates to make \", _jsx(InlineCode, {\n            children: \"floret\"\n          }), \", \", _jsx(InlineCode, {\n            children: \"murmurhash\"\n          }), \", Thinc and spaCy endian neutral.\"]\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Initial support for Lower Sorbian and Upper Sorbian.\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Language updates for English, French, Italian, Japanese, Korean, Norwegian,\\nRussian, Slovenian, Spanish, Turkish, Ukrainian and Vietnamese.\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"New noun chunks for Finnish.\"\n        }), \"\\n\"]\n      })]\n    }), \"\\n\", _jsxs(_components.section, {\n      id: \"section-pipelines\",\n      children: [_jsx(_components.h2, {\n        id: \"pipelines\",\n        children: \"Trained pipelines \"\n      }), _jsx(_components.h3, {\n        id: \"new-pipelines\",\n        children: \"New trained pipelines \"\n      }), _jsxs(_components.p, {\n        children: [\"v3.3 introduces new CPU/CNN pipelines for Finnish, Korean and Swedish, which use\\nthe new trainable lemmatizer and\\n\", _jsx(_components.a, {\n          href: \"https://github.com/explosion/floret\",\n          children: \"floret vectors\"\n        }), \". Due to the use\\n\", _jsx(_components.a, {\n          href: \"https://explosion.ai/blog/bloom-embeddings\",\n          children: \"Bloom embeddings\"\n        }), \" and subwords, the\\npipelines have compact vectors with no out-of-vocabulary words.\"]\n      }), _jsxs(_components.table, {\n        children: [_jsx(_components.thead, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.th, {\n              children: \"Package\"\n            }), _jsx(_components.th, {\n              children: \"Language\"\n            }), _jsx(_components.th, {\n              align: \"right\",\n              children: \"UPOS\"\n            }), _jsx(_components.th, {\n              align: \"right\",\n              children: \"Parser LAS\"\n            }), _jsx(_components.th, {\n              align: \"right\",\n              children: \"NER F\"\n            })]\n          })\n        }), _jsxs(_components.tbody, {\n          children: [_jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.a, {\n                href: \"/models/fi#fi_core_news_sm\",\n                children: _jsx(InlineCode, {\n                  children: \"fi_core_news_sm\"\n                })\n              })\n            }), _jsx(_components.td, {\n              children: \"Finnish\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"92.5\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"71.9\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"75.9\"\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.a, {\n                href: \"/models/fi#fi_core_news_md\",\n                children: _jsx(InlineCode, {\n                  children: \"fi_core_news_md\"\n                })\n              })\n            }), _jsx(_components.td, {\n              children: \"Finnish\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"95.9\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"78.6\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"80.6\"\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.a, {\n                href: \"/models/fi#fi_core_news_lg\",\n                children: _jsx(InlineCode, {\n                  children: \"fi_core_news_lg\"\n                })\n              })\n            }), _jsx(_components.td, {\n              children: \"Finnish\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"96.2\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"79.4\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"82.4\"\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.a, {\n                href: \"/models/ko#ko_core_news_sm\",\n                children: _jsx(InlineCode, {\n                  children: \"ko_core_news_sm\"\n                })\n              })\n            }), _jsx(_components.td, {\n              children: \"Korean\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"86.1\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"65.6\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"71.3\"\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.a, {\n                href: \"/models/ko#ko_core_news_md\",\n                children: _jsx(InlineCode, {\n                  children: \"ko_core_news_md\"\n                })\n              })\n            }), _jsx(_components.td, {\n              children: \"Korean\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"94.7\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"80.9\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"83.1\"\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.a, {\n                href: \"/models/ko#ko_core_news_lg\",\n                children: _jsx(InlineCode, {\n                  children: \"ko_core_news_lg\"\n                })\n              })\n            }), _jsx(_components.td, {\n              children: \"Korean\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"94.7\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"81.3\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"85.3\"\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.a, {\n                href: \"/models/sv#sv_core_news_sm\",\n                children: _jsx(InlineCode, {\n                  children: \"sv_core_news_sm\"\n                })\n              })\n            }), _jsx(_components.td, {\n              children: \"Swedish\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"95.0\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"75.9\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"74.7\"\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.a, {\n                href: \"/models/sv#sv_core_news_md\",\n                children: _jsx(InlineCode, {\n                  children: \"sv_core_news_md\"\n                })\n              })\n            }), _jsx(_components.td, {\n              children: \"Swedish\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"96.3\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"78.5\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"79.3\"\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.a, {\n                href: \"/models/sv#sv_core_news_lg\",\n                children: _jsx(InlineCode, {\n                  children: \"sv_core_news_lg\"\n                })\n              })\n            }), _jsx(_components.td, {\n              children: \"Swedish\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"96.3\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"79.1\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"81.1\"\n            })]\n          })]\n        })]\n      }), _jsx(_components.h3, {\n        id: \"pipeline-updates\",\n        children: \"Pipeline updates \"\n      }), _jsxs(_components.p, {\n        children: [\"The following languages switch from lookup or rule-based lemmatizers to the new\\ntrainable lemmatizer: Danish, Dutch, German, Greek, Italian, Lithuanian,\\nNorwegian, Polish, Portuguese and Romanian. The overall lemmatizer accuracy\\nimproves for all of these pipelines, but be aware that the types of errors may\\nlook quite different from the lookup-based lemmatizers. If you’d prefer to\\ncontinue using the previous lemmatizer, you can\\n\", _jsx(_components.a, {\n          href: \"/models#design-modify\",\n          children: \"switch from the trainable lemmatizer to a non-trainable lemmatizer\"\n        }), \".\"]\n      }), _jsx(\"figure\", {\n        children: _jsxs(_components.table, {\n          children: [_jsx(_components.thead, {\n            children: _jsxs(_components.tr, {\n              children: [_jsx(_components.th, {\n                children: \"Model\"\n              }), _jsx(_components.th, {\n                align: \"right\",\n                children: \"v3.2 Lemma Acc\"\n              }), _jsx(_components.th, {\n                align: \"right\",\n                children: \"v3.3 Lemma Acc\"\n              })]\n            })\n          }), _jsxs(_components.tbody, {\n            children: [_jsxs(_components.tr, {\n              children: [_jsx(_components.td, {\n                children: _jsx(_components.a, {\n                  href: \"/models/da#da_core_news_md\",\n                  children: _jsx(InlineCode, {\n                    children: \"da_core_news_md\"\n                  })\n                })\n              }), _jsx(_components.td, {\n                align: \"right\",\n                children: \"84.9\"\n              }), _jsx(_components.td, {\n                align: \"right\",\n                children: \"94.8\"\n              })]\n            }), _jsxs(_components.tr, {\n              children: [_jsx(_components.td, {\n                children: _jsx(_components.a, {\n                  href: \"/models/de#de_core_news_md\",\n                  children: _jsx(InlineCode, {\n                    children: \"de_core_news_md\"\n                  })\n                })\n              }), _jsx(_components.td, {\n                align: \"right\",\n                children: \"73.4\"\n              }), _jsx(_components.td, {\n                align: \"right\",\n                children: \"97.7\"\n              })]\n            }), _jsxs(_components.tr, {\n              children: [_jsx(_components.td, {\n                children: _jsx(_components.a, {\n                  href: \"/models/el#el_core_news_md\",\n                  children: _jsx(InlineCode, {\n                    children: \"el_core_news_md\"\n                  })\n                })\n              }), _jsx(_components.td, {\n                align: \"right\",\n                children: \"56.5\"\n              }), _jsx(_components.td, {\n                align: \"right\",\n                children: \"88.9\"\n              })]\n            }), _jsxs(_components.tr, {\n              children: [_jsx(_components.td, {\n                children: _jsx(_components.a, {\n                  href: \"/models/fi#fi_core_news_md\",\n                  children: _jsx(InlineCode, {\n                    children: \"fi_core_news_md\"\n                  })\n                })\n              }), _jsx(_components.td, {\n                align: \"right\",\n                children: \"-\"\n              }), _jsx(_components.td, {\n                align: \"right\",\n                children: \"86.2\"\n              })]\n            }), _jsxs(_components.tr, {\n              children: [_jsx(_components.td, {\n                children: _jsx(_components.a, {\n                  href: \"/models/it#it_core_news_md\",\n                  children: _jsx(InlineCode, {\n                    children: \"it_core_news_md\"\n                  })\n                })\n              }), _jsx(_components.td, {\n                align: \"right\",\n                children: \"86.6\"\n              }), _jsx(_components.td, {\n                align: \"right\",\n                children: \"97.2\"\n              })]\n            }), _jsxs(_components.tr, {\n              children: [_jsx(_components.td, {\n                children: _jsx(_components.a, {\n                  href: \"/models/ko#ko_core_news_md\",\n                  children: _jsx(InlineCode, {\n                    children: \"ko_core_news_md\"\n                  })\n                })\n              }), _jsx(_components.td, {\n                align: \"right\",\n                children: \"-\"\n              }), _jsx(_components.td, {\n                align: \"right\",\n                children: \"90.0\"\n              })]\n            }), _jsxs(_components.tr, {\n              children: [_jsx(_components.td, {\n                children: _jsx(_components.a, {\n                  href: \"/models/lt#lt_core_news_md\",\n                  children: _jsx(InlineCode, {\n                    children: \"lt_core_news_md\"\n                  })\n                })\n              }), _jsx(_components.td, {\n                align: \"right\",\n                children: \"71.1\"\n              }), _jsx(_components.td, {\n                align: \"right\",\n                children: \"84.8\"\n              })]\n            }), _jsxs(_components.tr, {\n              children: [_jsx(_components.td, {\n                children: _jsx(_components.a, {\n                  href: \"/models/nb#nb_core_news_md\",\n                  children: _jsx(InlineCode, {\n                    children: \"nb_core_news_md\"\n                  })\n                })\n              }), _jsx(_components.td, {\n                align: \"right\",\n                children: \"76.7\"\n              }), _jsx(_components.td, {\n                align: \"right\",\n                children: \"97.1\"\n              })]\n            }), _jsxs(_components.tr, {\n              children: [_jsx(_components.td, {\n                children: _jsx(_components.a, {\n                  href: \"/models/nl#nl_core_news_md\",\n                  children: _jsx(InlineCode, {\n                    children: \"nl_core_news_md\"\n                  })\n                })\n              }), _jsx(_components.td, {\n                align: \"right\",\n                children: \"81.5\"\n              }), _jsx(_components.td, {\n                align: \"right\",\n                children: \"94.0\"\n              })]\n            }), _jsxs(_components.tr, {\n              children: [_jsx(_components.td, {\n                children: _jsx(_components.a, {\n                  href: \"/models/pl#pl_core_news_md\",\n                  children: _jsx(InlineCode, {\n                    children: \"pl_core_news_md\"\n                  })\n                })\n              }), _jsx(_components.td, {\n                align: \"right\",\n                children: \"87.1\"\n              }), _jsx(_components.td, {\n                align: \"right\",\n                children: \"93.7\"\n              })]\n            }), _jsxs(_components.tr, {\n              children: [_jsx(_components.td, {\n                children: _jsx(_components.a, {\n                  href: \"/models/pt#pt_core_news_md\",\n                  children: _jsx(InlineCode, {\n                    children: \"pt_core_news_md\"\n                  })\n                })\n              }), _jsx(_components.td, {\n                align: \"right\",\n                children: \"76.7\"\n              }), _jsx(_components.td, {\n                align: \"right\",\n                children: \"96.9\"\n              })]\n            }), _jsxs(_components.tr, {\n              children: [_jsx(_components.td, {\n                children: _jsx(_components.a, {\n                  href: \"/models/ro#ro_core_news_md\",\n                  children: _jsx(InlineCode, {\n                    children: \"ro_core_news_md\"\n                  })\n                })\n              }), _jsx(_components.td, {\n                align: \"right\",\n                children: \"81.8\"\n              }), _jsx(_components.td, {\n                align: \"right\",\n                children: \"95.5\"\n              })]\n            }), _jsxs(_components.tr, {\n              children: [_jsx(_components.td, {\n                children: _jsx(_components.a, {\n                  href: \"/models/sv#sv_core_news_md\",\n                  children: _jsx(InlineCode, {\n                    children: \"sv_core_news_md\"\n                  })\n                })\n              }), _jsx(_components.td, {\n                align: \"right\",\n                children: \"-\"\n              }), _jsx(_components.td, {\n                align: \"right\",\n                children: \"95.5\"\n              })]\n            })]\n          })]\n        })\n      }), _jsxs(_components.p, {\n        children: [\"In addition, the vectors in the English pipelines are deduplicated to improve\\nthe pruned vectors in the \", _jsx(InlineCode, {\n          children: \"md\"\n        }), \" models and reduce the \", _jsx(InlineCode, {\n          children: \"lg\"\n        }), \" model size.\"]\n      })]\n    }), \"\\n\", _jsxs(_components.section, {\n      id: \"section-upgrading\",\n      children: [_jsx(_components.h2, {\n        id: \"upgrading\",\n        children: \"Notes about upgrading from v3.2 \"\n      }), _jsx(_components.h3, {\n        children: \"Span comparisons\"\n      }), _jsxs(_components.p, {\n        children: [\"Span comparisons involving ordering (\", _jsx(InlineCode, {\n          children: \"<\"\n        }), \", \", _jsx(InlineCode, {\n          children: \"<=\"\n        }), \", \", _jsx(InlineCode, {\n          children: \">\"\n        }), \", \", _jsx(InlineCode, {\n          children: \">=\"\n        }), \") now take all span\\nattributes into account (start, end, label, and KB ID) so spans may be sorted in\\na slightly different order.\"]\n      }), _jsx(_components.h3, {\n        children: \"Whitespace annotation\"\n      }), _jsx(_components.p, {\n        children: \"During training, annotation on whitespace tokens is handled in the same way as\\nannotation on non-whitespace tokens in order to allow custom whitespace\\nannotation.\"\n      }), _jsx(_components.h3, {\n        children: \"Doc.from_docs\"\n      }), _jsxs(_components.p, {\n        children: [_jsx(_components.a, {\n          href: \"/api/doc#from_docs\",\n          children: _jsx(InlineCode, {\n            children: \"Doc.from_docs\"\n          })\n        }), \" now includes \", _jsx(InlineCode, {\n          children: \"Doc.tensor\"\n        }), \" by default and\\nsupports excludes with an \", _jsx(InlineCode, {\n          children: \"exclude\"\n        }), \" argument in the same format as\\n\", _jsx(InlineCode, {\n          children: \"Doc.to_bytes\"\n        }), \". The supported exclude fields are \", _jsx(InlineCode, {\n          children: \"spans\"\n        }), \", \", _jsx(InlineCode, {\n          children: \"tensor\"\n        }), \" and\\n\", _jsx(InlineCode, {\n          children: \"user_data\"\n        }), \".\"]\n      }), _jsxs(_components.p, {\n        children: [\"Docs including \", _jsx(InlineCode, {\n          children: \"Doc.tensor\"\n        }), \" may be quite a bit larger in RAM, so to exclude\\n\", _jsx(InlineCode, {\n          children: \"Doc.tensor\"\n        }), \" as in v3.2:\"]\n      }), _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-diff\",\n          lang: \"diff\",\n          children: \"-merged_doc = Doc.from_docs(docs)\\n+merged_doc = Doc.from_docs(docs, exclude=[\\\"tensor\\\"])\\n\"\n        })\n      }), _jsx(_components.h3, {\n        children: \"Using trained pipelines with floret vectors\"\n      }), _jsxs(_components.p, {\n        children: [\"If you’re running a new trained pipeline for Finnish, Korean or Swedish on new\\ntexts and working with \", _jsx(InlineCode, {\n          children: \"Doc\"\n        }), \" objects, you shouldn’t notice any difference with\\nfloret vectors vs. default vectors.\"]\n      }), _jsx(_components.p, {\n        children: \"If you use vectors for similarity comparisons, there are a few differences,\\nmainly because a floret pipeline doesn’t include any kind of frequency-based\\nword list similar to the list of in-vocabulary vector keys with default vectors.\"\n      }), _jsxs(_components.ul, {\n        children: [\"\\n\", _jsxs(_components.li, {\n          children: [\"\\n\", _jsx(_components.p, {\n            children: \"If your workflow iterates over the vector keys, you should use an external\\nword list instead:\"\n          }), \"\\n\", _jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-diff\",\n              lang: \"diff\",\n              children: \"- lexemes = [nlp.vocab[orth] for orth in nlp.vocab.vectors]\\n+ lexemes = [nlp.vocab[word] for word in external_word_list]\\n\"\n            })\n          }), \"\\n\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"\\n\", _jsxs(_components.p, {\n            children: [_jsx(InlineCode, {\n              children: \"Vectors.most_similar\"\n            }), \" is not supported because there’s no fixed list of\\nvectors to compare your vectors to.\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), _jsx(_components.h3, {\n        id: \"version-compat\",\n        children: \"Pipeline package version compatibility \"\n      }), _jsxs(_components.blockquote, {\n        children: [\"\\n\", _jsx(_components.h4, {\n          children: \"Using legacy implementations\"\n        }), \"\\n\", _jsxs(_components.p, {\n          children: [\"In spaCy v3, you’ll still be able to load and reference legacy implementations\\nvia \", _jsx(_components.a, {\n            href: \"https://github.com/explosion/spacy-legacy\",\n            children: _jsx(InlineCode, {\n              children: \"spacy-legacy\"\n            })\n          }), \", even if the\\ncomponents or architectures change and newer versions are available in the\\ncore library.\"]\n        }), \"\\n\"]\n      }), _jsx(_components.p, {\n        children: \"When you’re loading a pipeline package trained with an earlier version of spaCy\\nv3, you will see a warning telling you that the pipeline may be incompatible.\\nThis doesn’t necessarily have to be true, but we recommend running your\\npipelines against your test suite or evaluation data to make sure there are no\\nunexpected results.\"\n      }), _jsxs(_components.p, {\n        children: [\"If you’re using one of the \", _jsx(_components.a, {\n          href: \"/models\",\n          children: \"trained pipelines\"\n        }), \" we provide, you should\\nrun \", _jsx(_components.a, {\n          href: \"/api/cli#download\",\n          children: _jsx(InlineCode, {\n            children: \"spacy download\"\n          })\n        }), \" to update to the latest version. To\\nsee an overview of all installed packages and their compatibility, you can run\\n\", _jsx(_components.a, {\n          href: \"/api/cli#validate\",\n          children: _jsx(InlineCode, {\n            children: \"spacy validate\"\n          })\n        }), \".\"]\n      }), _jsxs(_components.p, {\n        children: [\"If you’ve trained your own custom pipeline and you’ve confirmed that it’s still\\nworking as expected, you can update the spaCy version requirements in the\\n\", _jsx(_components.a, {\n          href: \"/api/data-formats#meta\",\n          children: _jsx(InlineCode, {\n            children: \"meta.json\"\n          })\n        }), \":\"]\n      }), _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-diff\",\n          lang: \"diff\",\n          children: \"- \\\"spacy_version\\\": \\\">=3.2.0,<3.3.0\\\",\\n+ \\\"spacy_version\\\": \\\">=3.2.0,<3.4.0\\\",\\n\"\n        })\n      }), _jsx(_components.h3, {\n        children: \"Updating v3.2 configs\"\n      }), _jsxs(_components.p, {\n        children: [\"To update a config from spaCy v3.2 with the new v3.3 settings, run\\n\", _jsx(_components.a, {\n          href: \"/api/cli#init-fill-config\",\n          children: _jsx(InlineCode, {\n            children: \"init fill-config\"\n          })\n        }), \":\"]\n      }), _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-bash\",\n          lang: \"bash\",\n          children: \"$ python -m spacy init fill-config config-v3.2.cfg config-v3.3.cfg\\n\"\n        })\n      }), _jsxs(_components.p, {\n        children: [\"In many cases (\", _jsx(_components.a, {\n          href: \"/api/cli#train\",\n          children: _jsx(InlineCode, {\n            children: \"spacy train\"\n          })\n        }), \",\\n\", _jsx(_components.a, {\n          href: \"/api/top-level#spacy.load\",\n          children: _jsx(InlineCode, {\n            children: \"spacy.load\"\n          })\n        }), \"), the new defaults will be filled in\\nautomatically, but you’ll need to fill in the new settings to run\\n\", _jsx(_components.a, {\n          href: \"/api/cli#debug\",\n          children: _jsx(InlineCode, {\n            children: \"debug config\"\n          })\n        }), \" and \", _jsx(_components.a, {\n          href: \"/api/cli#debug-data\",\n          children: _jsx(InlineCode, {\n            children: \"debug data\"\n          })\n        }), \".\"]\n      }), _jsxs(_components.p, {\n        children: [\"To see the speed improvements for the\\n\", _jsxs(_components.a, {\n          href: \"/api/architectures#Tagger\",\n          children: [_jsx(InlineCode, {\n            children: \"Tagger\"\n          }), \" architecture\"]\n        }), \", edit your config to switch\\nfrom \", _jsx(InlineCode, {\n          children: \"spacy.Tagger.v1\"\n        }), \" to \", _jsx(InlineCode, {\n          children: \"spacy.Tagger.v2\"\n        }), \" and then run \", _jsx(InlineCode, {\n          children: \"init fill-config\"\n        }), \".\"]\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"title":"What's New in v3.3","teaser":"New features and how to upgrade","menu":[["New Features","features"],["Upgrading Notes","upgrading"]]},"scope":{}},"sectionTitle":"Usage Documentation","theme":"blue","section":"usage","apiDetails":{"stringName":null,"baseClass":null,"trainable":null},"isIndex":false,"next":{"slug":"/usage/v3-4","title":"New in v3.4"}},"__N_SSG":true}