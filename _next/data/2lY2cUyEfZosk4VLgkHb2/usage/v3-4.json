{"pageProps":{"title":"What's New in v3.4","teaser":"New features and how to upgrade","menu":[["New Features","features"],["Upgrading Notes","upgrading"]],"slug":"/usage/v3-4","mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    section: \"section\",\n    h2: \"h2\",\n    p: \"p\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    pre: \"pre\",\n    code: \"code\",\n    blockquote: \"blockquote\",\n    h4: \"h4\"\n  }, _provideComponents(), props.components), {InlineCode} = _components;\n  if (!InlineCode) _missingMdxReference(\"InlineCode\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.section, {\n      id: \"section-features\",\n      children: [_jsx(_components.h2, {\n        id: \"features\",\n        hidden: \"true\",\n        children: \"New features \"\n      }), _jsx(_components.p, {\n        children: \"spaCy v3.4 brings typing and speed improvements along with new vectors for\\nEnglish CNN pipelines and new trained pipelines for Croatian. This release also\\nincludes prebuilt linux aarch64 wheels for all spaCy dependencies distributed by\\nExplosion.\"\n      }), _jsx(_components.h3, {\n        id: \"typing\",\n        children: \"Typing improvements \"\n      }), _jsx(_components.p, {\n        children: \"spaCy v3.4 supports pydantic v1.9 and mypy 0.950+ through extensive updates to\\ntypes in Thinc v8.1.\"\n      }), _jsx(_components.h3, {\n        id: \"speed\",\n        children: \"Speed improvements \"\n      }), _jsxs(_components.ul, {\n        children: [\"\\n\", _jsxs(_components.li, {\n          children: [\"For the parser, use C \", _jsx(InlineCode, {\n            children: \"saxpy\"\n          }), \"/\", _jsx(InlineCode, {\n            children: \"sgemm\"\n          }), \" provided by the \", _jsx(InlineCode, {\n            children: \"Ops\"\n          }), \" implementation in\\norder to use Accelerate through \", _jsx(InlineCode, {\n            children: \"thinc-apple-ops\"\n          }), \".\"]\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Improved speed of vector lookups.\"\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"Improved speed for \", _jsx(InlineCode, {\n            children: \"Example.get_aligned_parse\"\n          }), \" and \", _jsx(InlineCode, {\n            children: \"Example.get_aligned\"\n          }), \".\"]\n        }), \"\\n\"]\n      })]\n    }), \"\\n\", _jsxs(_components.section, {\n      children: [_jsx(_components.h2, {\n        children: \"Additional features and improvements\"\n      }), _jsxs(_components.ul, {\n        children: [\"\\n\", _jsxs(_components.li, {\n          children: [\"Min/max \", _jsx(InlineCode, {\n            children: \"{n,m}\"\n          }), \" operator for \", _jsx(InlineCode, {\n            children: \"Matcher\"\n          }), \" patterns.\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"Language updates:\", \"\\n\", _jsxs(_components.ul, {\n            children: [\"\\n\", _jsx(_components.li, {\n              children: \"Improve tokenization for Cyrillic combining diacritics.\"\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"Improve English tokenizer exceptions for contractions with\\nthis/that/these/those.\"\n            }), \"\\n\"]\n          }), \"\\n\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"Updated \", _jsx(InlineCode, {\n            children: \"spacy project clone\"\n          }), \" to try both \", _jsx(InlineCode, {\n            children: \"main\"\n          }), \" and \", _jsx(InlineCode, {\n            children: \"master\"\n          }), \" branches by\\ndefault.\"]\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Added confidence threshold for named entity linker.\"\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"Improved handling of Typer optional default values for \", _jsx(InlineCode, {\n            children: \"init_config_cli\"\n          }), \".\"]\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Added cycle detection in parser projectivization methods.\"\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"Added counts for NER labels in \", _jsx(InlineCode, {\n            children: \"debug data\"\n          }), \".\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"Support for adding NVTX ranges to \", _jsx(InlineCode, {\n            children: \"TrainablePipe\"\n          }), \" components.\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"Support env variable \", _jsx(InlineCode, {\n            children: \"SPACY_NUM_BUILD_JOBS\"\n          }), \" to specify the number of build\\njobs to run in parallel with \", _jsx(InlineCode, {\n            children: \"pip\"\n          }), \".\"]\n        }), \"\\n\"]\n      })]\n    }), \"\\n\", _jsxs(_components.section, {\n      id: \"section-pipelines\",\n      children: [_jsx(_components.h2, {\n        id: \"pipelines\",\n        children: \"Trained pipelines \"\n      }), _jsx(_components.h3, {\n        id: \"new-pipelines\",\n        children: \"New trained pipelines \"\n      }), _jsxs(_components.p, {\n        children: [\"v3.4 introduces new CPU/CNN pipelines for Croatian, which use the trainable\\nlemmatizer and \", _jsx(_components.a, {\n          href: \"https://github.com/explosion/floret\",\n          children: \"floret vectors\"\n        }), \". Due to the\\nuse of \", _jsx(_components.a, {\n          href: \"https://explosion.ai/blog/bloom-embeddings\",\n          children: \"Bloom embeddings\"\n        }), \" and\\nsubwords, the pipelines have compact vectors with no out-of-vocabulary words.\"]\n      }), _jsxs(_components.table, {\n        children: [_jsx(_components.thead, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.th, {\n              children: \"Package\"\n            }), _jsx(_components.th, {\n              align: \"right\",\n              children: \"UPOS\"\n            }), _jsx(_components.th, {\n              align: \"right\",\n              children: \"Parser LAS\"\n            }), _jsx(_components.th, {\n              align: \"right\",\n              children: \"NER F\"\n            })]\n          })\n        }), _jsxs(_components.tbody, {\n          children: [_jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.a, {\n                href: \"/models/hr#hr_core_news_sm\",\n                children: _jsx(InlineCode, {\n                  children: \"hr_core_news_sm\"\n                })\n              })\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"96.6\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"77.5\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"76.1\"\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.a, {\n                href: \"/models/hr#hr_core_news_md\",\n                children: _jsx(InlineCode, {\n                  children: \"hr_core_news_md\"\n                })\n              })\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"97.3\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"80.1\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"81.8\"\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.a, {\n                href: \"/models/hr#hr_core_news_lg\",\n                children: _jsx(InlineCode, {\n                  children: \"hr_core_news_lg\"\n                })\n              })\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"97.5\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"80.4\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"83.0\"\n            })]\n          })]\n        })]\n      }), _jsx(_components.h3, {\n        id: \"pipeline-updates\",\n        children: \"Pipeline updates \"\n      }), _jsx(_components.p, {\n        children: \"All CNN pipelines have been extended with whitespace augmentation.\"\n      }), _jsx(_components.p, {\n        children: \"The English CNN pipelines have new word vectors:\"\n      }), _jsxs(_components.table, {\n        children: [_jsx(_components.thead, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.th, {\n              children: \"Package\"\n            }), _jsx(_components.th, {\n              children: \"Model Version\"\n            }), _jsx(_components.th, {\n              align: \"right\",\n              children: \"TAG\"\n            }), _jsx(_components.th, {\n              align: \"right\",\n              children: \"Parser LAS\"\n            }), _jsx(_components.th, {\n              align: \"right\",\n              children: \"NER F\"\n            })]\n          })\n        }), _jsxs(_components.tbody, {\n          children: [_jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.a, {\n                href: \"/models/en#en_core_web_md\",\n                children: _jsx(InlineCode, {\n                  children: \"en_core_web_md\"\n                })\n              })\n            }), _jsx(_components.td, {\n              children: \"v3.3.0\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"97.3\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"90.1\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"84.6\"\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.a, {\n                href: \"/models/en#en_core_web_md\",\n                children: _jsx(InlineCode, {\n                  children: \"en_core_web_md\"\n                })\n              })\n            }), _jsx(_components.td, {\n              children: \"v3.4.0\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"97.2\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"90.3\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"85.5\"\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.a, {\n                href: \"/models/en#en_core_web_lg\",\n                children: _jsx(InlineCode, {\n                  children: \"en_core_web_lg\"\n                })\n              })\n            }), _jsx(_components.td, {\n              children: \"v3.3.0\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"97.4\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"90.1\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"85.3\"\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.a, {\n                href: \"/models/en#en_core_web_lg\",\n                children: _jsx(InlineCode, {\n                  children: \"en_core_web_lg\"\n                })\n              })\n            }), _jsx(_components.td, {\n              children: \"v3.4.0\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"97.3\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"90.2\"\n            }), _jsx(_components.td, {\n              align: \"right\",\n              children: \"85.6\"\n            })]\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.section, {\n      id: \"section-upgrading\",\n      children: [_jsx(_components.h2, {\n        id: \"upgrading\",\n        children: \"Notes about upgrading from v3.3 \"\n      }), _jsx(_components.h3, {\n        children: \"Doc.has_vector\"\n      }), _jsxs(_components.p, {\n        children: [_jsx(InlineCode, {\n          children: \"Doc.has_vector\"\n        }), \" now matches \", _jsx(InlineCode, {\n          children: \"Token.has_vector\"\n        }), \" and \", _jsx(InlineCode, {\n          children: \"Span.has_vector\"\n        }), \": it\\nreturns \", _jsx(InlineCode, {\n          children: \"True\"\n        }), \" if at least one token in the doc has a vector rather than\\nchecking only whether the vocab contains vectors.\"]\n      }), _jsx(_components.h3, {\n        children: \"Using trained pipelines with floret vectors\"\n      }), _jsxs(_components.p, {\n        children: [\"If you’re using a trained pipeline for Croatian, Finnish, Korean or Swedish with\\nnew texts and working with \", _jsx(InlineCode, {\n          children: \"Doc\"\n        }), \" objects, you shouldn’t notice any difference\\nbetween floret vectors and default vectors.\"]\n      }), _jsx(_components.p, {\n        children: \"If you use vectors for similarity comparisons, there are a few differences,\\nmainly because a floret pipeline doesn’t include any kind of frequency-based\\nword list similar to the list of in-vocabulary vector keys with default vectors.\"\n      }), _jsxs(_components.ul, {\n        children: [\"\\n\", _jsxs(_components.li, {\n          children: [\"\\n\", _jsx(_components.p, {\n            children: \"If your workflow iterates over the vector keys, you should use an external\\nword list instead:\"\n          }), \"\\n\", _jsx(_components.pre, {\n            children: _jsx(_components.code, {\n              className: \"language-diff\",\n              lang: \"diff\",\n              children: \"- lexemes = [nlp.vocab[orth] for orth in nlp.vocab.vectors]\\n+ lexemes = [nlp.vocab[word] for word in external_word_list]\\n\"\n            })\n          }), \"\\n\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"\\n\", _jsxs(_components.p, {\n            children: [_jsx(InlineCode, {\n              children: \"Vectors.most_similar\"\n            }), \" is not supported because there’s no fixed list of\\nvectors to compare your vectors to.\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), _jsx(_components.h3, {\n        id: \"version-compat\",\n        children: \"Pipeline package version compatibility \"\n      }), _jsxs(_components.blockquote, {\n        children: [\"\\n\", _jsx(_components.h4, {\n          children: \"Using legacy implementations\"\n        }), \"\\n\", _jsxs(_components.p, {\n          children: [\"In spaCy v3, you’ll still be able to load and reference legacy implementations\\nvia \", _jsx(_components.a, {\n            href: \"https://github.com/explosion/spacy-legacy\",\n            children: _jsx(InlineCode, {\n              children: \"spacy-legacy\"\n            })\n          }), \", even if the\\ncomponents or architectures change and newer versions are available in the\\ncore library.\"]\n        }), \"\\n\"]\n      }), _jsx(_components.p, {\n        children: \"When you’re loading a pipeline package trained with an earlier version of spaCy\\nv3, you will see a warning telling you that the pipeline may be incompatible.\\nThis doesn’t necessarily have to be true, but we recommend running your\\npipelines against your test suite or evaluation data to make sure there are no\\nunexpected results.\"\n      }), _jsxs(_components.p, {\n        children: [\"If you’re using one of the \", _jsx(_components.a, {\n          href: \"/models\",\n          children: \"trained pipelines\"\n        }), \" we provide, you should\\nrun \", _jsx(_components.a, {\n          href: \"/api/cli#download\",\n          children: _jsx(InlineCode, {\n            children: \"spacy download\"\n          })\n        }), \" to update to the latest version. To\\nsee an overview of all installed packages and their compatibility, you can run\\n\", _jsx(_components.a, {\n          href: \"/api/cli#validate\",\n          children: _jsx(InlineCode, {\n            children: \"spacy validate\"\n          })\n        }), \".\"]\n      }), _jsxs(_components.p, {\n        children: [\"If you’ve trained your own custom pipeline and you’ve confirmed that it’s still\\nworking as expected, you can update the spaCy version requirements in the\\n\", _jsx(_components.a, {\n          href: \"/api/data-formats#meta\",\n          children: _jsx(InlineCode, {\n            children: \"meta.json\"\n          })\n        }), \":\"]\n      }), _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-diff\",\n          lang: \"diff\",\n          children: \"- \\\"spacy_version\\\": \\\">=3.3.0,<3.4.0\\\",\\n+ \\\"spacy_version\\\": \\\">=3.3.0,<3.5.0\\\",\\n\"\n        })\n      }), _jsx(_components.h3, {\n        children: \"Updating v3.3 configs\"\n      }), _jsxs(_components.p, {\n        children: [\"To update a config from spaCy v3.3 with the new v3.4 settings, run\\n\", _jsx(_components.a, {\n          href: \"/api/cli#init-fill-config\",\n          children: _jsx(InlineCode, {\n            children: \"init fill-config\"\n          })\n        }), \":\"]\n      }), _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-bash\",\n          lang: \"bash\",\n          children: \"$ python -m spacy init fill-config config-v3.3.cfg config-v3.4.cfg\\n\"\n        })\n      }), _jsxs(_components.p, {\n        children: [\"In many cases (\", _jsx(_components.a, {\n          href: \"/api/cli#train\",\n          children: _jsx(InlineCode, {\n            children: \"spacy train\"\n          })\n        }), \",\\n\", _jsx(_components.a, {\n          href: \"/api/top-level#spacy.load\",\n          children: _jsx(InlineCode, {\n            children: \"spacy.load\"\n          })\n        }), \"), the new defaults will be filled in\\nautomatically, but you’ll need to fill in the new settings to run\\n\", _jsx(_components.a, {\n          href: \"/api/cli#debug\",\n          children: _jsx(InlineCode, {\n            children: \"debug config\"\n          })\n        }), \" and \", _jsx(_components.a, {\n          href: \"/api/cli#debug-data\",\n          children: _jsx(InlineCode, {\n            children: \"debug data\"\n          })\n        }), \".\"]\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"title":"What's New in v3.4","teaser":"New features and how to upgrade","menu":[["New Features","features"],["Upgrading Notes","upgrading"]]},"scope":{}},"sectionTitle":"Usage Documentation","theme":"blue","section":"usage","apiDetails":{"stringName":null,"baseClass":null,"trainable":null},"isIndex":false,"next":{"slug":"/usage/v3-5","title":"New in v3.5"}},"__N_SSG":true}