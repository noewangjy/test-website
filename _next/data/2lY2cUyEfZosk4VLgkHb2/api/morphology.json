{"pageProps":{"title":"Morphology","tag":"class","source":"spacy/morphology.pyx","slug":"/api/morphology","mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    section: \"section\",\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    blockquote: \"blockquote\",\n    h4: \"h4\",\n    pre: \"pre\",\n    code: \"code\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    del: \"del\",\n    strong: \"strong\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components), {InlineCode} = _components;\n  if (!InlineCode) _missingMdxReference(\"InlineCode\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.section, {\n      children: _jsxs(_components.p, {\n        children: [\"Store the possible morphological analyses for a language, and index them by\\nhash. To save space on each token, tokens only know the hash of their\\nmorphological analysis, so queries of morphological attributes are delegated to\\nthis class. See \", _jsx(_components.a, {\n          href: \"/api/morphology#morphanalysis\",\n          children: _jsx(InlineCode, {\n            children: \"MorphAnalysis\"\n          })\n        }), \" for the\\ncontainer storing a single morphological analysis.\"]\n      })\n    }), \"\\n\", _jsxs(_components.section, {\n      id: \"section-init\",\n      children: [_jsx(_components.h2, {\n        id: \"init\",\n        tag: \"method\",\n        children: \"Morphology.__init__ \"\n      }), _jsxs(_components.p, {\n        children: [\"Create a \", _jsx(InlineCode, {\n          children: \"Morphology\"\n        }), \" object.\"]\n      }), _jsxs(_components.blockquote, {\n        children: [\"\\n\", _jsx(_components.h4, {\n          children: \"Example\"\n        }), \"\\n\", _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-python\",\n            lang: \"python\",\n            children: \"from spacy.morphology import Morphology\\n\\nmorphology = Morphology(strings)\\n\"\n          })\n        }), \"\\n\"]\n      }), _jsxs(_components.table, {\n        children: [_jsx(_components.thead, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.th, {\n              children: \"Name\"\n            }), _jsx(_components.th, {\n              children: \"Description\"\n            })]\n          })\n        }), _jsx(_components.tbody, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(InlineCode, {\n                children: \"strings\"\n              })\n            }), _jsxs(_components.td, {\n              children: [\"The string store. \", _jsx(_components.del, {\n                children: \"StringStore\"\n              })]\n            })]\n          })\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.section, {\n      id: \"section-add\",\n      children: [_jsx(_components.h2, {\n        id: \"add\",\n        tag: \"method\",\n        children: \"Morphology.add \"\n      }), _jsxs(_components.p, {\n        children: [\"Insert a morphological analysis in the morphology table, if not already present.\\nThe morphological analysis may be provided in the Universal Dependencies\\n\", _jsx(_components.a, {\n          href: \"https://universaldependencies.org/format.html#morphological-annotation\",\n          children: \"FEATS\"\n        }), \"\\nformat as a string or in the tag map dictionary format. Returns the hash of the\\nnew analysis.\"]\n      }), _jsxs(_components.blockquote, {\n        children: [\"\\n\", _jsx(_components.h4, {\n          children: \"Example\"\n        }), \"\\n\", _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-python\",\n            lang: \"python\",\n            children: \"feats = \\\"Feat1=Val1|Feat2=Val2\\\"\\nhash = nlp.vocab.morphology.add(feats)\\nassert hash == nlp.vocab.strings[feats]\\n\"\n          })\n        }), \"\\n\"]\n      }), _jsxs(_components.table, {\n        children: [_jsx(_components.thead, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.th, {\n              children: \"Name\"\n            }), _jsx(_components.th, {\n              children: \"Description\"\n            })]\n          })\n        }), _jsx(_components.tbody, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(InlineCode, {\n                children: \"features\"\n              })\n            }), _jsxs(_components.td, {\n              children: [\"The morphological features. \", _jsx(_components.del, {\n                children: \"Union[Dict, str]\"\n              })]\n            })]\n          })\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.section, {\n      id: \"section-get\",\n      children: [_jsx(_components.h2, {\n        id: \"get\",\n        tag: \"method\",\n        children: \"Morphology.get \"\n      }), _jsxs(_components.blockquote, {\n        children: [\"\\n\", _jsx(_components.h4, {\n          children: \"Example\"\n        }), \"\\n\", _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-python\",\n            lang: \"python\",\n            children: \"feats = \\\"Feat1=Val1|Feat2=Val2\\\"\\nhash = nlp.vocab.morphology.add(feats)\\nassert nlp.vocab.morphology.get(hash) == feats\\n\"\n          })\n        }), \"\\n\"]\n      }), _jsxs(_components.p, {\n        children: [\"Get the\\n\", _jsx(_components.a, {\n          href: \"https://universaldependencies.org/format.html#morphological-annotation\",\n          children: \"FEATS\"\n        }), \"\\nstring for the hash of the morphological analysis.\"]\n      }), _jsxs(_components.table, {\n        children: [_jsx(_components.thead, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.th, {\n              children: \"Name\"\n            }), _jsx(_components.th, {\n              children: \"Description\"\n            })]\n          })\n        }), _jsx(_components.tbody, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(InlineCode, {\n                children: \"morph\"\n              })\n            }), _jsxs(_components.td, {\n              children: [\"The hash of the morphological analysis. \", _jsx(_components.del, {\n                children: \"int\"\n              })]\n            })]\n          })\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.section, {\n      id: \"section-feats_to_dict\",\n      children: [_jsx(_components.h2, {\n        id: \"feats_to_dict\",\n        tag: \"staticmethod\",\n        children: \"Morphology.feats_to_dict \"\n      }), _jsxs(_components.p, {\n        children: [\"Convert a string\\n\", _jsx(_components.a, {\n          href: \"https://universaldependencies.org/format.html#morphological-annotation\",\n          children: \"FEATS\"\n        }), \"\\nrepresentation to a dictionary of features and values in the same format as the\\ntag map.\"]\n      }), _jsxs(_components.blockquote, {\n        children: [\"\\n\", _jsx(_components.h4, {\n          children: \"Example\"\n        }), \"\\n\", _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-python\",\n            lang: \"python\",\n            children: \"from spacy.morphology import Morphology\\nd = Morphology.feats_to_dict(\\\"Feat1=Val1|Feat2=Val2\\\")\\nassert d == {\\\"Feat1\\\": \\\"Val1\\\", \\\"Feat2\\\": \\\"Val2\\\"}\\n\"\n          })\n        }), \"\\n\"]\n      }), _jsxs(_components.table, {\n        children: [_jsx(_components.thead, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.th, {\n              children: \"Name\"\n            }), _jsx(_components.th, {\n              children: \"Description\"\n            })]\n          })\n        }), _jsxs(_components.tbody, {\n          children: [_jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(InlineCode, {\n                children: \"feats\"\n              })\n            }), _jsxs(_components.td, {\n              children: [\"The morphological features in Universal Dependencies \", _jsx(_components.a, {\n                href: \"https://universaldependencies.org/format.html#morphological-annotation\",\n                children: \"FEATS\"\n              }), \" format. \", _jsx(_components.del, {\n                children: \"str\"\n              })]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.strong, {\n                children: \"RETURNS\"\n              })\n            }), _jsxs(_components.td, {\n              children: [\"The morphological features as a dictionary. \", _jsx(_components.del, {\n                children: \"Dict[str, str]\"\n              })]\n            })]\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.section, {\n      id: \"section-dict_to_feats\",\n      children: [_jsx(_components.h2, {\n        id: \"dict_to_feats\",\n        tag: \"staticmethod\",\n        children: \"Morphology.dict_to_feats \"\n      }), _jsxs(_components.p, {\n        children: [\"Convert a dictionary of features and values to a string\\n\", _jsx(_components.a, {\n          href: \"https://universaldependencies.org/format.html#morphological-annotation\",\n          children: \"FEATS\"\n        }), \"\\nrepresentation.\"]\n      }), _jsxs(_components.blockquote, {\n        children: [\"\\n\", _jsx(_components.h4, {\n          children: \"Example\"\n        }), \"\\n\", _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-python\",\n            lang: \"python\",\n            children: \"from spacy.morphology import Morphology\\nf = Morphology.dict_to_feats({\\\"Feat1\\\": \\\"Val1\\\", \\\"Feat2\\\": \\\"Val2\\\"})\\nassert f == \\\"Feat1=Val1|Feat2=Val2\\\"\\n\"\n          })\n        }), \"\\n\"]\n      }), _jsxs(_components.table, {\n        children: [_jsx(_components.thead, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.th, {\n              children: \"Name\"\n            }), _jsx(_components.th, {\n              children: \"Description\"\n            })]\n          })\n        }), _jsxs(_components.tbody, {\n          children: [_jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(InlineCode, {\n                children: \"feats_dict\"\n              })\n            }), _jsxs(_components.td, {\n              children: [\"The morphological features as a dictionary. \", _jsx(_components.del, {\n                children: \"Dict[str, str]\"\n              })]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.strong, {\n                children: \"RETURNS\"\n              })\n            }), _jsxs(_components.td, {\n              children: [\"The morphological features in Universal Dependencies \", _jsx(_components.a, {\n                href: \"https://universaldependencies.org/format.html#morphological-annotation\",\n                children: \"FEATS\"\n              }), \" format. \", _jsx(_components.del, {\n                children: \"str\"\n              })]\n            })]\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.section, {\n      id: \"section-attributes\",\n      children: [_jsx(_components.h2, {\n        id: \"attributes\",\n        children: \"Attributes \"\n      }), _jsxs(_components.table, {\n        children: [_jsx(_components.thead, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.th, {\n              children: \"Name\"\n            }), _jsx(_components.th, {\n              children: \"Description\"\n            })]\n          })\n        }), _jsxs(_components.tbody, {\n          children: [_jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(InlineCode, {\n                children: \"FEATURE_SEP\"\n              })\n            }), _jsxs(_components.td, {\n              children: [\"The \", _jsx(_components.a, {\n                href: \"https://universaldependencies.org/format.html#morphological-annotation\",\n                children: \"FEATS\"\n              }), \" feature separator. Default is \", _jsx(InlineCode, {\n                children: \"|\"\n              }), \". \", _jsx(_components.del, {\n                children: \"str\"\n              })]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(InlineCode, {\n                children: \"FIELD_SEP\"\n              })\n            }), _jsxs(_components.td, {\n              children: [\"The \", _jsx(_components.a, {\n                href: \"https://universaldependencies.org/format.html#morphological-annotation\",\n                children: \"FEATS\"\n              }), \" field separator. Default is \", _jsx(InlineCode, {\n                children: \"=\"\n              }), \". \", _jsx(_components.del, {\n                children: \"str\"\n              })]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(InlineCode, {\n                children: \"VALUE_SEP\"\n              })\n            }), _jsxs(_components.td, {\n              children: [\"The \", _jsx(_components.a, {\n                href: \"https://universaldependencies.org/format.html#morphological-annotation\",\n                children: \"FEATS\"\n              }), \" value separator. Default is \", _jsx(InlineCode, {\n                children: \",\"\n              }), \". \", _jsx(_components.del, {\n                children: \"str\"\n              })]\n            })]\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.section, {\n      id: \"section-morphanalysis\",\n      children: [_jsx(_components.h2, {\n        id: \"morphanalysis\",\n        tag: \"class\",\n        source: \"spacy/tokens/morphanalysis.pyx\",\n        children: \"MorphAnalysis \"\n      }), _jsx(_components.p, {\n        children: \"Stores a single morphological analysis.\"\n      }), _jsx(_components.h3, {\n        id: \"morphanalysis-init\",\n        tag: \"method\",\n        children: \"MorphAnalysis.__init__ \"\n      }), _jsxs(_components.p, {\n        children: [\"Initialize a MorphAnalysis object from a Universal Dependencies\\n\", _jsx(_components.a, {\n          href: \"https://universaldependencies.org/format.html#morphological-annotation\",\n          children: \"FEATS\"\n        }), \"\\nstring or a dictionary of morphological features.\"]\n      }), _jsxs(_components.blockquote, {\n        children: [\"\\n\", _jsx(_components.h4, {\n          children: \"Example\"\n        }), \"\\n\", _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-python\",\n            lang: \"python\",\n            children: \"from spacy.tokens import MorphAnalysis\\n\\nfeats = \\\"Feat1=Val1|Feat2=Val2\\\"\\nm = MorphAnalysis(nlp.vocab, feats)\\n\"\n          })\n        }), \"\\n\"]\n      }), _jsxs(_components.table, {\n        children: [_jsx(_components.thead, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.th, {\n              children: \"Name\"\n            }), _jsx(_components.th, {\n              children: \"Description\"\n            })]\n          })\n        }), _jsxs(_components.tbody, {\n          children: [_jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(InlineCode, {\n                children: \"vocab\"\n              })\n            }), _jsxs(_components.td, {\n              children: [\"The vocab. \", _jsx(_components.del, {\n                children: \"Vocab\"\n              })]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(InlineCode, {\n                children: \"features\"\n              })\n            }), _jsxs(_components.td, {\n              children: [\"The morphological features. \", _jsx(_components.del, {\n                children: \"Union[Dict[str, str], str]\"\n              })]\n            })]\n          })]\n        })]\n      }), _jsx(_components.h3, {\n        id: \"morphanalysis-contains\",\n        tag: \"method\",\n        children: \"MorphAnalysis.__contains__ \"\n      }), _jsx(_components.p, {\n        children: \"Whether a feature/value pair is in the analysis.\"\n      }), _jsxs(_components.blockquote, {\n        children: [\"\\n\", _jsx(_components.h4, {\n          children: \"Example\"\n        }), \"\\n\", _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-python\",\n            lang: \"python\",\n            children: \"feats = \\\"Feat1=Val1,Val2|Feat2=Val2\\\"\\nmorph = MorphAnalysis(nlp.vocab, feats)\\nassert \\\"Feat1=Val1\\\" in morph\\n\"\n          })\n        }), \"\\n\"]\n      }), _jsxs(_components.table, {\n        children: [_jsx(_components.thead, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.th, {\n              children: \"Name\"\n            }), _jsx(_components.th, {\n              children: \"Description\"\n            })]\n          })\n        }), _jsx(_components.tbody, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.strong, {\n                children: \"RETURNS\"\n              })\n            }), _jsxs(_components.td, {\n              children: [\"A feature/value pair in the analysis. \", _jsx(_components.del, {\n                children: \"str\"\n              })]\n            })]\n          })\n        })]\n      }), _jsx(_components.h3, {\n        id: \"morphanalysis-iter\",\n        tag: \"method\",\n        children: \"MorphAnalysis.__iter__ \"\n      }), _jsx(_components.p, {\n        children: \"Iterate over the feature/value pairs in the analysis.\"\n      }), _jsxs(_components.blockquote, {\n        children: [\"\\n\", _jsx(_components.h4, {\n          children: \"Example\"\n        }), \"\\n\", _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-python\",\n            lang: \"python\",\n            children: \"feats = \\\"Feat1=Val1,Val3|Feat2=Val2\\\"\\nmorph = MorphAnalysis(nlp.vocab, feats)\\nassert list(morph) == [\\\"Feat1=Va1\\\", \\\"Feat1=Val3\\\", \\\"Feat2=Val2\\\"]\\n\"\n          })\n        }), \"\\n\"]\n      }), _jsxs(_components.table, {\n        children: [_jsx(_components.thead, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.th, {\n              children: \"Name\"\n            }), _jsx(_components.th, {\n              children: \"Description\"\n            })]\n          })\n        }), _jsx(_components.tbody, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.strong, {\n                children: \"YIELDS\"\n              })\n            }), _jsxs(_components.td, {\n              children: [\"A feature/value pair in the analysis. \", _jsx(_components.del, {\n                children: \"str\"\n              })]\n            })]\n          })\n        })]\n      }), _jsx(_components.h3, {\n        id: \"morphanalysis-len\",\n        tag: \"method\",\n        children: \"MorphAnalysis.__len__ \"\n      }), _jsx(_components.p, {\n        children: \"Returns the number of features in the analysis.\"\n      }), _jsxs(_components.blockquote, {\n        children: [\"\\n\", _jsx(_components.h4, {\n          children: \"Example\"\n        }), \"\\n\", _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-python\",\n            lang: \"python\",\n            children: \"feats = \\\"Feat1=Val1,Val2|Feat2=Val2\\\"\\nmorph = MorphAnalysis(nlp.vocab, feats)\\nassert len(morph) == 3\\n\"\n          })\n        }), \"\\n\"]\n      }), _jsxs(_components.table, {\n        children: [_jsx(_components.thead, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.th, {\n              children: \"Name\"\n            }), _jsx(_components.th, {\n              children: \"Description\"\n            })]\n          })\n        }), _jsx(_components.tbody, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.strong, {\n                children: \"RETURNS\"\n              })\n            }), _jsxs(_components.td, {\n              children: [\"The number of features in the analysis. \", _jsx(_components.del, {\n                children: \"int\"\n              })]\n            })]\n          })\n        })]\n      }), _jsx(_components.h3, {\n        id: \"morphanalysis-str\",\n        tag: \"method\",\n        children: \"MorphAnalysis.__str__ \"\n      }), _jsxs(_components.p, {\n        children: [\"Returns the morphological analysis in the Universal Dependencies\\n\", _jsx(_components.a, {\n          href: \"https://universaldependencies.org/format.html#morphological-annotation\",\n          children: \"FEATS\"\n        }), \"\\nstring format.\"]\n      }), _jsxs(_components.blockquote, {\n        children: [\"\\n\", _jsx(_components.h4, {\n          children: \"Example\"\n        }), \"\\n\", _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-python\",\n            lang: \"python\",\n            children: \"feats = \\\"Feat1=Val1,Val2|Feat2=Val2\\\"\\nmorph = MorphAnalysis(nlp.vocab, feats)\\nassert str(morph) == feats\\n\"\n          })\n        }), \"\\n\"]\n      }), _jsxs(_components.table, {\n        children: [_jsx(_components.thead, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.th, {\n              children: \"Name\"\n            }), _jsx(_components.th, {\n              children: \"Description\"\n            })]\n          })\n        }), _jsx(_components.tbody, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.strong, {\n                children: \"RETURNS\"\n              })\n            }), _jsxs(_components.td, {\n              children: [\"The analysis in the Universal Dependencies \", _jsx(_components.a, {\n                href: \"https://universaldependencies.org/format.html#morphological-annotation\",\n                children: \"FEATS\"\n              }), \" format. \", _jsx(_components.del, {\n                children: \"str\"\n              })]\n            })]\n          })\n        })]\n      }), _jsx(_components.h3, {\n        id: \"morphanalysis-get\",\n        tag: \"method\",\n        children: \"MorphAnalysis.get \"\n      }), _jsx(_components.p, {\n        children: \"Retrieve values for a feature by field.\"\n      }), _jsxs(_components.blockquote, {\n        children: [\"\\n\", _jsx(_components.h4, {\n          children: \"Example\"\n        }), \"\\n\", _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-python\",\n            lang: \"python\",\n            children: \"feats = \\\"Feat1=Val1,Val2\\\"\\nmorph = MorphAnalysis(nlp.vocab, feats)\\nassert morph.get(\\\"Feat1\\\") == [\\\"Val1\\\", \\\"Val2\\\"]\\n\"\n          })\n        }), \"\\n\"]\n      }), _jsxs(_components.table, {\n        children: [_jsx(_components.thead, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.th, {\n              children: \"Name\"\n            }), _jsx(_components.th, {\n              children: \"Description\"\n            })]\n          })\n        }), _jsxs(_components.tbody, {\n          children: [_jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(InlineCode, {\n                children: \"field\"\n              })\n            }), _jsxs(_components.td, {\n              children: [\"The field to retrieve. \", _jsx(_components.del, {\n                children: \"str\"\n              })]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.strong, {\n                children: \"RETURNS\"\n              })\n            }), _jsxs(_components.td, {\n              children: [\"A list of the individual features. \", _jsx(_components.del, {\n                children: \"List[str]\"\n              })]\n            })]\n          })]\n        })]\n      }), _jsx(_components.h3, {\n        id: \"morphanalysis-to_dict\",\n        tag: \"method\",\n        children: \"MorphAnalysis.to_dict \"\n      }), _jsx(_components.p, {\n        children: \"Produce a dict representation of the analysis, in the same format as the tag\\nmap.\"\n      }), _jsxs(_components.blockquote, {\n        children: [\"\\n\", _jsx(_components.h4, {\n          children: \"Example\"\n        }), \"\\n\", _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-python\",\n            lang: \"python\",\n            children: \"feats = \\\"Feat1=Val1,Val2|Feat2=Val2\\\"\\nmorph = MorphAnalysis(nlp.vocab, feats)\\nassert morph.to_dict() == {\\\"Feat1\\\": \\\"Val1,Val2\\\", \\\"Feat2\\\": \\\"Val2\\\"}\\n\"\n          })\n        }), \"\\n\"]\n      }), _jsxs(_components.table, {\n        children: [_jsx(_components.thead, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.th, {\n              children: \"Name\"\n            }), _jsx(_components.th, {\n              children: \"Description\"\n            })]\n          })\n        }), _jsx(_components.tbody, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(_components.strong, {\n                children: \"RETURNS\"\n              })\n            }), _jsxs(_components.td, {\n              children: [\"The dict representation of the analysis. \", _jsx(_components.del, {\n                children: \"Dict[str, str]\"\n              })]\n            })]\n          })\n        })]\n      }), _jsx(_components.h3, {\n        id: \"morphanalysis-from_id\",\n        tag: \"classmethod\",\n        children: \"MorphAnalysis.from_id \"\n      }), _jsx(_components.p, {\n        children: \"Create a morphological analysis from a given hash ID.\"\n      }), _jsxs(_components.blockquote, {\n        children: [\"\\n\", _jsx(_components.h4, {\n          children: \"Example\"\n        }), \"\\n\", _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-python\",\n            lang: \"python\",\n            children: \"feats = \\\"Feat1=Val1|Feat2=Val2\\\"\\nhash = nlp.vocab.strings[feats]\\nmorph = MorphAnalysis.from_id(nlp.vocab, hash)\\nassert str(morph) == feats\\n\"\n          })\n        }), \"\\n\"]\n      }), _jsxs(_components.table, {\n        children: [_jsx(_components.thead, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.th, {\n              children: \"Name\"\n            }), _jsx(_components.th, {\n              children: \"Description\"\n            })]\n          })\n        }), _jsxs(_components.tbody, {\n          children: [_jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(InlineCode, {\n                children: \"vocab\"\n              })\n            }), _jsxs(_components.td, {\n              children: [\"The vocab. \", _jsx(_components.del, {\n                children: \"Vocab\"\n              })]\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: _jsx(InlineCode, {\n                children: \"key\"\n              })\n            }), _jsxs(_components.td, {\n              children: [\"The hash of the features string. \", _jsx(_components.del, {\n                children: \"int\"\n              })]\n            })]\n          })]\n        })]\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"title":"Morphology","tag":"class","source":"spacy/morphology.pyx"},"scope":{}},"sectionTitle":"API Documentation","theme":"green","section":"api","apiDetails":{"stringName":null,"baseClass":null,"trainable":null},"isIndex":false,"next":null},"__N_SSG":true}